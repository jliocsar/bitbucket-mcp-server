{ z } from zod

{ BitbucketToolDeclaration } from ../bitbucket.civet

export listPullRequestCommentsTool := new BitbucketToolDeclaration {
  name: "list-pull-request-comments",
  config: {
    title: "List pull request comments",
    description: "List pull request comments",
    inputSchema: {
      workspace: z.string().describe("The Bitbucket workspace name or UUID where the repository is located"),
      repository: z.string().describe("The repository name or UUID containing the pull request"),
      pullRequestId: z.number().describe("The unique identifier of the pull request to list comments from"),
      page: z.string().optional().describe("Page token for pagination"),
      pagelen: z.number().optional().describe("Number of items to return per page (default: 10, max: 100)"),
      q: z.string().optional().describe("Query string to filter comments"),
      sort: z.string().optional().describe("Field to sort results by (e.g., \"created_on\", \"-created_on\")"),
      fields: z.string().optional().describe("Comma-separated list of fields to include in the response"),
    },
  },
  run({ workspace, repository, pullRequestId, page, pagelen, q, sort, fields }) {
    // Get the comment
    comments := @bitbucket.pullrequests
      |> .listComments {
        pull_request_id: pullRequestId,
        repo_slug: repository,
        page,
        pagelen,
        q,
        sort,
        workspace,
        fields,
      }
      |> await
      |> .data

    // Return the comments
    comments
  }
}
